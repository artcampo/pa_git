Regresion Test for arithmetic ops and memory.


copy to mem.vhd (l.37):


		000000 => x"6201", -- MOV R1, 1
		000001 => x"6402", -- MOV R2, 2
		000002 => x"6603", -- MOV R3, 3
		000003 => x"4105", -- LD R4 <- R0(5)
		000004 => x"A290", -- ADD R4 <- R4 + R2 ;r4=DEAF
    		000005 => x"AB2C", -- SUB R3 <- R3-R1
		000006 => x"AB2C", -- SUB R3 <- R3-R1
		000007 => x"8122", -- ADD R1 <- R1 + 2, r1=3, r2 = 2, r3 = 1
		000008 => x"5103", -- STR R0(3) <- R4
		000009 => x"5081", -- STR R0(1) <- R2
		000010 => x"50C2", -- STR R0(2) <- R3
		000011 => x"5040", -- STR R0(0) <- R1
		others => x"0000"  -- NOP



copy to mem.vhd :

		p0  <= mem_data_ram(0);
  		p1  <= mem_data_ram(1);
  		p2  <= mem_data_ram(2);
		p3  <= mem_data_ram(3);


copy to tb_load.vhd (l.23):
		constant c_p0: std_logic_vector := x"0003";
		constant c_p1: std_logic_vector := x"0002";
		constant c_p2: std_logic_vector := x"0001";
		constant c_p3: std_logic_vector := x"DEAF";


copy to tb_load.vhd:
 		 if(p0 /= c_p0) then
		      write(ErrorMsg, STRING'("p0 Should be: "));
		      write(ErrorMsg, c_p0);	
		      write(ErrorMsg, STRING'(" is: "));
		      write(ErrorMsg, p0);		  
		      writeline(output, ErrorMsg);
		  end if;
  
		  if(p1 /= c_p1) then
		      write(ErrorMsg, STRING'("p1 Should be: "));
		      write(ErrorMsg, c_p1);	
		      write(ErrorMsg, STRING'(" is: "));
		      write(ErrorMsg, p1);		  
		      writeline(output, ErrorMsg);
		  end if;
  
		  if(p2 /= c_p2) then
		      write(ErrorMsg, STRING'("p2 Should be: "));
		      write(ErrorMsg, c_p2);	
		      write(ErrorMsg, STRING'(" is: "));
		      write(ErrorMsg, p2);		  
		      writeline(output, ErrorMsg);
		  end if;

		  if(p3 /= c_p3) then
		      write(ErrorMsg, STRING'("p3 Should be: "));
		      write(ErrorMsg, c_p3);	
		      write(ErrorMsg, STRING'(" is: "));
		      write(ErrorMsg, p3);		  
		      writeline(output, ErrorMsg);
		  end if;